CREATE TABLE IF NOT EXISTS `bsi_db2`.`invoice_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL DEFAULT NULL,
  `description` VARCHAR(256) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = latin1;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`invoice_has_invoice_type` (
  `invoice_id` INT(11) NOT NULL,
  `invoice_type_id` INT(11) NOT NULL,
  INDEX `fk_invoice_has_invoice_type_invoice_type1_idx` (`invoice_type_id` ASC),
  INDEX `fk_invoice_has_invoice_type_invoice1_idx` (`invoice_id` ASC),
  CONSTRAINT `fk_invoice_has_invoice_type_invoice1`
    FOREIGN KEY (`invoice_id`)
    REFERENCES `bsi_db2`.`invoice` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_invoice_has_invoice_type_invoice_type1`
    FOREIGN KEY (`invoice_type_id`)
    REFERENCES `bsi_db2`.`invoice_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

-- Work Journal 

-- Order
-- 1. update order
ALTER TABLE `order` ADD `description` VARCHAR(512) NULL AFTER `tax`;
ALTER TABLE `order` ADD `tax` FLOAT NULL AFTER `quote_id`;

-- Order Item

-- 1. Adding description on order item table
ALTER TABLE `order_item` ADD `description` VARCHAR(256) NULL AFTER `product_feature_id`;

-- 2. Adding description on order item table

-- Order on Invoice
-- 1. Adding new column named as `order_id`
ALTER TABLE `invoice` ADD `order_id` INT NOT NULL AFTER `invoice_date`;

-- 2. add fk
ALTER TABLE `invoice` 
ADD COLUMN `order_id` INT(11) NOT NULL AFTER `id`,
ADD INDEX `fk_invoice_order1_idx` (`order_id` ASC)
ALTER TABLE `invoice` 
ADD CONSTRAINT `fk_invoice_order1`
  FOREIGN KEY (`order_id`)
  REFERENCES `order` (`id`)
  ON DELETE CASCADE
  ON UPDATE CASCADE

-- 3. change relationship action 
ALTER TABLE `invoice_has_invoice_type` DROP FOREIGN KEY `fk_invoice_has_invoice_type_invoice1`; ALTER TABLE `invoice_has_invoice_type` ADD CONSTRAINT `fk_invoice_has_invoice_type_invoice1` FOREIGN KEY (`invoice_id`) REFERENCES `invoice`(`id`) ON DELETE CASCADE ON UPDATE CASCADE;


-- Create Production Log
-- 1. Create table production log
CREATE TABLE IF NOT EXISTS `bsi_db2`.`production_log` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `facility_id` INT(11) NOT NULL,
  `date` DATE NULL,
  `log` TEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_production_log_facility1_idx` (`facility_id` ASC),
  CONSTRAINT `fk_production_log_facility1`
    FOREIGN KEY (`facility_id`)
    REFERENCES `bsi_db2`.`facility` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


--- Create new feature invoice status
--1. add column name on invoice status type;
ALTER TABLE `invoice_status_type` ADD `name` VARCHAR(55) NOT NULL AFTER `id`;
ALTER TABLE `invoice_status_type` ADD `description` VARCHAR(256) NULL AFTER `name`;

--2. add column created at and updated at on invoice status type
ALTER TABLE `invoice_status` ADD `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `invoice_status_type_id`, ADD `updated_at` TIMESTAMP on update CURRENT_TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `created_at`;

--3. insert data on invoice status type
INSERT INTO `invoice_status_type` (`id`, `name`, `description`) VALUES (NULL, 'paid', NULL), (NULL, 'unpaid', NULL), (NULL, 'partial', NULL);
INSERT INTO `invoice_status_type` (`id`, `name`, `description`) VALUES (NULL, 'none', NULL);

--- Add Shipment Receipt Image upload on shipment
--1. add new column name imageUrl
ALTER TABLE `shipment` ADD `imageUrl` TEXT NULL AFTER `comment`;

--- Create Contact Mechanism Schema
CREATE TABLE IF NOT EXISTS `bsi_db2`.`contact_mechanism_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(128) NULL DEFAULT NULL,
  `description` VARCHAR(256) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`contact_mechanism` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `contact_mechanism_type_id` INT(11) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_contact_mechanism_contact_mechanism_type1_idx` (`contact_mechanism_type_id` ASC),
  CONSTRAINT `fk_contact_mechanism_contact_mechanism_type1`
    FOREIGN KEY (`contact_mechanism_type_id`)
    REFERENCES `bsi_db2`.`contact_mechanism_type` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`party_has_contact_mechanism` (
  `party_id` INT(11) NOT NULL,
  `contact_mechanism_id` INT(11) NOT NULL,
  INDEX `fk_party_has_contact_mechanism_contact_mechanism1_idx` (`contact_mechanism_id` ASC),
  INDEX `fk_party_has_contact_mechanism_party1_idx` (`party_id` ASC),
  CONSTRAINT `fk_party_has_contact_mechanism_party1`
    FOREIGN KEY (`party_id`)
    REFERENCES `bsi_db2`.`party` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_party_has_contact_mechanism_contact_mechanism1`
    FOREIGN KEY (`contact_mechanism_id`)
    REFERENCES `bsi_db2`.`contact_mechanism` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`postal_address` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `contact_mechanism_id` INT(11) NOT NULL,
  `street` VARCHAR(256) NULL DEFAULT NULL,
  `city` VARCHAR(100) NULL DEFAULT NULL,
  `province` VARCHAR(100) NULL DEFAULT NULL,
  `country` VARCHAR(100) NULL DEFAULT NULL,
  `postal_code` INT(11) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_postal_address_contact_mechanism1_idx` (`contact_mechanism_id` ASC),
  CONSTRAINT `fk_postal_address_contact_mechanism1_idx`
    FOREIGN KEY (`contact_mechanism_id`)
    REFERENCES `bsi_db2`.`contact_mechanism` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`telecommunication_number` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `contact_mechanism_id` INT(11) NOT NULL,
  `number` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_telecommunication_number_contact_mechanism1_idx` (`contact_mechanism_id` ASC),
  CONSTRAINT `fk_telecommunication_number_contact_mechanism1_idx`
    FOREIGN KEY (`contact_mechanism_id`)
    REFERENCES `bsi_db2`.`contact_mechanism` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`email` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `contact_mechanism_id` INT(11) NOT NULL,
  `name` VARCHAR(100) NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_email_contact_mechanism1_idx` (`contact_mechanism_id` ASC),
  CONSTRAINT `fk_email_contact_mechanism1_idx`
    FOREIGN KEY (`contact_mechanism_id`)
    REFERENCES `bsi_db2`.`contact_mechanism` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- insert new data
INSERT INTO `contact_mechanism_type` (`id`, `name`, `description`) VALUES (NULL, 'Phone', NULL), (NULL, 'Email Address', NULL), (NULL, 'Postal Address', NULL), (NULL, 'Fax', NULL)

-- alter table payment
ALTER TABLE `bsi_db2`.`payment` 
ADD COLUMN `invoice_id` INT(11) NOT NULL AFTER `payment_method_type_id`,
ADD INDEX `fk_payment_invoice1_idx` (`invoice_id` ASC);

ALTER TABLE `bsi_db2`.`payment` 
ADD CONSTRAINT `fk_payment_invoice1`
  FOREIGN KEY (`invoice_id`)
  REFERENCES `bsi_db2`.`invoice` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

-- rdit table payment method type
ALTER TABLE `payment_method_type` ADD `name` VARCHAR(55) NOT NULL AFTER `id`;
ALTER TABLE `payment_method_type` CHANGE `description` `description` VARCHAR(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NULL DEFAULT NULL;

INSERT INTO `payment_method_type` (`id`, `name`, `description`) VALUES (NULL, 'Bank Transfer', NULL), (NULL, 'Cash', NULL), (NULL, 'Check', NULL), (NULL, 'Electronic', NULL);

-- alter financial account 
ALTER TABLE `financial_account` ADD `account_number` INT NOT NULL AFTER `account_name`;

--- alter financial account transaction table
ALTER TABLE `financial_account_transaction` ADD `trx_amount` FLOAT NOT NULL AFTER `trx_type`, ADD `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `trx_amount`, ADD `updated_at` TIMESTAMP on update CURRENT_TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `created_at`;

-- inserrt data to financial account type
INSERT INTO `financial_account_type` (`id`, `name`, `description`) VALUES (NULL, 'Investment Account', NULL), (NULL, 'Bank Account', NULL);

-- add updated and created on payment
ALTER TABLE `payment` ADD `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `comment`, ADD `updated_at` TIMESTAMP on update CURRENT_TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP AFTER `created_at`;

-- insert new row on payment and imageUrl
ALTER TABLE `payment` ADD `imageUrl` TEXT NOT NULL AFTER `comment`;

-- alter table payment
ALTER TABLE `payment` CHANGE `ref_num` `ref_num` VARCHAR(25) NULL DEFAULT NULL, CHANGE `amount` `amount` FLOAT NULL DEFAULT NULL;

-- adding payment_id on financial account transaction
ALTER TABLE `bsi_db2`.`financial_account_transaction` 
ADD COLUMN `payment_id` INT(11) NOT NULL AFTER `financial_account_id`,
ADD INDEX `fk_financial_account_transaction_payment1_idx` (`payment_id` ASC);

ALTER TABLE `bsi_db2`.`financial_account_transaction` 
ADD CONSTRAINT `fk_financial_account_transaction_payment1`
  FOREIGN KEY (`payment_id`)
  REFERENCES `bsi_db2`.`payment` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

ALTER TABLE `bsi_db2`.`financial_account_transaction` 
DROP COLUMN `trx_type`,
ADD COLUMN `trx_type_id` INT(11) NOT NULL AFTER `payment_id`,
ADD INDEX `fk_financial_account_transaction_payment1_idx` (`payment_id` ASC),
ADD INDEX `fk_financial_account_transaction_trx_type1_idx` (`trx_type_id` ASC);

CREATE TABLE IF NOT EXISTS `bsi_db2`.`trx_type` (
  `id` INT(11) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

ALTER TABLE `bsi_db2`.`financial_account_transaction` 
ADD CONSTRAINT `fk_financial_account_transaction_trx_type1`
  FOREIGN KEY (`trx_type_id`)
  REFERENCES `bsi_db2`.`trx_type` (`id`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION;

INSERT INTO `trx_type` (`id`, `name`) VALUES (NULL, 'Withdrawal'), (NULL, 'Deposit'), (NULL, 'Adjustment');
ALTER TABLE `financial_account_transaction` ADD `ref_num` INT NOT NULL AFTER `payment_id`;

-- Adding shipment_id on invoice table as foreign key
ALTER TABLE `invoice` ADD `shipment_id` INT NULL AFTER `order_id`, ADD INDEX `fk_shipment_invoice_idx` (`shipment_id`);

ALTER TABLE `invoice` ADD CONSTRAINT `fk_shipment_invoice1` FOREIGN KEY (`shipment_id`) REFERENCES `shipment`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `invoice_item` ADD `shipment_item_id` INT NULL AFTER `invoice_id`, ADD INDEX `fk_shipment_item_invoice_item_idx` (`shipment_item_id`);

ALTER TABLE `invoice_item` ADD CONSTRAINT `fk_shipment_item_invoice_item_idx` FOREIGN KEY (`shipment_item_id`) REFERENCES `shipment_item`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`invoice_has_shipment` (
  `invoice_id` INT(11) NOT NULL,
  `shipment_id` INT(11) NOT NULL,
  INDEX `fk_invoice_has_shipment_shipment1_idx` (`shipment_id` ASC),
  INDEX `fk_invoice_has_shipment_invoice1_idx` (`invoice_id` ASC),
  CONSTRAINT `fk_invoice_has_shipment_invoice1`
    FOREIGN KEY (`invoice_id`)
    REFERENCES `bsi_db2`.`invoice` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_invoice_has_shipment_shipment1`
    FOREIGN KEY (`shipment_id`)
    REFERENCES `bsi_db2`.`shipment` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;
DEFAULT CHARACTER SET = utf8mb4

ALTER TABLE `invoice` CHANGE `order_id` `order_id` INT(11) NULL;

CREATE TABLE IF NOT EXISTS `bsi_db2`.`payment_has_invoice` (
  `payment_id` INT(11) NOT NULL,
  `invoice_id` INT(11) NOT NULL,
  INDEX `fk_payment_has_invoice_invoice1_idx` (`invoice_id` ASC),
  INDEX `fk_payment_has_invoice_payment1_idx` (`payment_id` ASC),
  CONSTRAINT `fk_payment_has_invoice_payment1`
    FOREIGN KEY (`payment_id`)
    REFERENCES `bsi_db2`.`payment` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_payment_has_invoice_invoice1`
    FOREIGN KEY (`invoice_id`)
    REFERENCES `bsi_db2`.`invoice` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;
DEFAULT CHARACTER SET = utf8mb4

-- quote item
ALTER TABLE `quote_item` ADD `product_id` INT NULL AFTER `request_item_id`;
ALTER TABLE `quote_item` ADD CONSTRAINT `fk_quote_item_product_id1` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
ALTER TABLE `order_item` ADD `product_id` INT NULL AFTER `shipment_estimated`;
ALTER TABLE `order_item` ADD CONSTRAINT `fk_order_item_product_id1` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE ON UPDATE CASCADE

INSERT INTO `product_feature` (`id`, `product_id`, `color`, `size`, `price_component_id`) VALUES (NULL, '46', '1', '1', NULL);
INSERT INTO `product_feature` (`id`, `product_id`, `color`, `size`, `price_component_id`) VALUES (NULL, '47', '1', '1', NULL);
INSERT INTO `product_feature` (`id`, `product_id`, `color`, `size`, `price_component_id`) VALUES (NULL, '48', '1', '1', NULL);
INSERT INTO `product_feature` (`id`, `product_id`, `color`, `size`, `price_component_id`) VALUES (NULL, '272', '1', '1', NULL);
INSERT INTO `product_feature` (`id`, `product_id`, `color`, `size`, `price_component_id`) VALUES (NULL, '282', '1', '1', NULL);
INSERT INTO `product_feature` (`id`, `product_id`, `color`, `size`, `price_component_id`) VALUES (NULL, '341', '1', '1', NULL);

ALTER TABLE `invoice` ADD `due_date` INT NOT NULL DEFAULT '7' AFTER `invoice_date`;

ALTER TABLE `invoice_term` ADD `invoice_id` INT NULL AFTER `id`;
ALTER TABLE `invoice_term` DROP INDEX `fk_invoice_term_invoice_idx`, ADD INDEX `fk_invoice_term_invoice_item_idx` (`invoice_item_id`) USING BTREE;
ALTER TABLE `invoice_term` ADD INDEX(`fk_invoice_term_invoice_idx`);
ALTER TABLE `invoice_term` DROP FOREIGN KEY `fk_invoice_term_invoice_item1`; ALTER TABLE `invoice_term` ADD CONSTRAINT `fk_invoice_term_invoice_item1` FOREIGN KEY (`invoice_item_id`) REFERENCES `invoice_item`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION; ALTER TABLE `invoice_term` ADD CONSTRAINT `fk_invoice_term_invoice1` FOREIGN KEY (`invoice_id`) REFERENCES `invoice`(`id`) ON DELETE RESTRICT ON UPDATE RESTRICT;
ALTER TABLE `invoice_term` CHANGE `invoice_item_id` `invoice_item_id` INT(11) NULL;

#reconcile
CREATE TABLE `bsi_db2`.`reconcile` ( `id` INT NOT NULL AUTO_INCREMENT , `costing_id` INT NOT NULL , `sales_order_id` INT NOT NULL , `order_id` INT NOT NULL COMMENT 'related to sales_order_id' , PRIMARY KEY (`id`), INDEX `fk_reconcile_costing_idx` (`costing_id`), INDEX `fk_reconcile_sales_order_id` (`sales_order_id`), INDEX `fk_reconcile_order_idx` (`order_id`)) ENGINE = InnoDB;

ALTER TABLE `reconcile` ADD CONSTRAINT `fk_reconcile_costing_idx` FOREIGN KEY (`costing_id`) REFERENCES `bom`(`id`) ON DELETE CASCADE ON UPDATE CASCADE; ALTER TABLE `reconcile` ADD CONSTRAINT `fk_reconcile_sales_order_id ` FOREIGN KEY (`sales_order_id`) REFERENCES `sales_order`(`id`) ON DELETE CASCADE ON UPDATE CASCADE; ALTER TABLE `reconcile` ADD CONSTRAINT `fk_reconcile_order_idx` FOREIGN KEY (`order_id`) REFERENCES `order`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

CREATE TABLE `bsi_db2`.`reconcile_has_purchase_order` ( `reconcile_id` INT NOT NULL , `purchase_order_id` INT NOT NULL , `order_id` INT NOT NULL , INDEX `fk_reconcile_has_purchase_order_reconcile_idx` (`reconcile_id`), INDEX `fk_reconcile_has_purchase_order_purchase_order_idx` (`purchase_order_id`), INDEX `fk_reconcile_has_purchase_order_order_idx` (`order_id`)) ENGINE = InnoDB;

ALTER TABLE `reconcile_has_purchase_order` ADD CONSTRAINT `fk_reconcile_has_purchase_order_reconcile_idx` FOREIGN KEY (`reconcile_id`) REFERENCES `reconcile`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION; ALTER TABLE `reconcile_has_purchase_order` ADD CONSTRAINT `fk_reconcile_has_purchase_order_purchase_order_idx` FOREIGN KEY (`purchase_order_id`) REFERENCES `purchase_order`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION; ALTER TABLE `reconcile_has_purchase_order` ADD CONSTRAINT `fk_reconcile_has_purchase_order_order_idx` FOREIGN KEY (`order_id`) REFERENCES `order`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

CREATE TABLE currency (
  currency_id INT PRIMARY KEY,
  currency_code VARCHAR(3) NOT NULL,
  exchange_rate DECIMAL(10, 6) NOT NULL
);

ALTER TABLE `quote` ADD `currency_id` INT NULL AFTER `id`, ADD INDEX `fk_currency_quote_idx` (`currency_id`);
ALTER TABLE `quote` ADD CONSTRAINT `fk_quote_currency_idx` FOREIGN KEY (`currency_id`) REFERENCES `currency`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `order` ADD `currency_id` INT NULL AFTER `id`, ADD INDEX `fk_currency_order_idx` (`currency_id`);
ALTER TABLE `order` ADD CONSTRAINT `fk_order_currency_idx` FOREIGN KEY (`currency_id`) REFERENCES `currency`(`id`) ON DELETE NO ACTION ON UPDATE NO ACTION;

ALTER TABLE `currency` CHANGE `currency_id` `id` INT(10) NOT NULL AUTO_INCREMENT;

INSERT INTO `currency` (`id`, `currency_code`, `exchange_rate`) VALUES (NULL, 'USD', '0.000066'), (NULL, 'IDR', '1')


-- Financial Order Budget
-- The purpose of this system is to maintance number of expenditure
CREATE TABLE `bsi_db2`.`finance_order_budget` ( `id` INT NOT NULL , `month` INT NOT NULL, `year` YEAR NOT NULL , `created_at` TIMESTAMP NOT NULL , `updated_at` TIMESTAMP NOT NULL ) ENGINE = InnoDB;
ALTER TABLE `finance_order_budget` CHANGE `created_at` `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE `finance_order_budget` CHANGE `updated_at` `updated_at` TIMESTAMP on update CURRENT_TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP;

CREATE TABLE `bsi_db2`.`financial_order_budget_item` ( `id` INT NOT NULL AUTO_INCREMENT , `costing_id` INT NOT NULL , PRIMARY KEY (`id`), INDEX `fk_financial_order_budget_item_costing_idx` (`costing_id`)) ENGINE = InnoDB;
ALTER TABLE `financial_order_budget_item` ADD CONSTRAINT `fk_financial_order_budget_item_costing_idx` FOREIGN KEY (`costing_id`) REFERENCES `bom`(`id`) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE `financial_order_budget_item` ADD `financial_order_budget_id` INT NOT NULL AFTER `id`, ADD INDEX `fk_financial_order_budget_to_item_idx` (`financial_order_budget_id`);
ALTER TABLE `finance_order_budget` ADD PRIMARY KEY(`id`);
ALTER TABLE `finance_order_budget` CHANGE `id` `id` INT(11) NOT NULL AUTO_INCREMENT;
ALTER TABLE `financial_order_budget_item` ADD CONSTRAINT `fk_financial_order_budget_to_item_idx` FOREIGN KEY (`financial_order_budget_id`) REFERENCES `finance_order_budget`(`id`) ON DELETE CASCADE ON UPDATE CASCADE;
